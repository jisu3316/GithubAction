name: CI-CD

# 배포할 브렌치 
on:
  push:
    branches:
      - main

# 변수선언
env:
  S3_BUCKET_NAME: s3-jisu-test # 버킷이름
  CODE_DEPLOY_APPLICATION_NAME: CODE-DEPLOY-TEST # CodeDeploy 어플리케이션이름
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: CODE-DEPLOY-GROUP # CodeDeploy 그룹명
  
# 배포할 환경의 OS
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      
      #  gradle 권한 부여      
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
      
      # gradle build
      - name: Build with Gradle
        run: ./gradlew build # 멀티 모듈등 다른 빌드 옵션 사용시 여기에 작성
        shell: bash
        
      # 파일 올릴시 zip 파일로 올리기위한 step
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA .
        shell: bash
      
      # 파일을 S3로 올리기위한 권한을 얻기 위한 키 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      # s3 올리기
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip
        
      # code deploy agent로 s3올라와있는 파일을 가져와 배포
      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
          
